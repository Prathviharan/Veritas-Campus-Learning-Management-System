{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentNotificationPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\n\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../context/AuthContext';\nimport './NotificationStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentNotificationPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/api/student/notifications', {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        setNotifications(data.notifications);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to load notifications');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, [user.token]);\n  const markAsRead = id => {\n    // Implement read status if needed\n    console.log(`Marked notification ${id} as read`);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-notifications\",\n      children: \"No notifications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-list\",\n      children: notifications.map(notification => {\n        var _notification$course, _notification$created;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-card ${notification.isImportant ? 'important' : ''}`,\n          onClick: () => markAsRead(notification._id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-course\",\n              children: (_notification$course = notification.course) === null || _notification$course === void 0 ? void 0 : _notification$course.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), notification.isImportant && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"important-badge\",\n              children: \"Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-message\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-date\",\n              children: new Date(notification.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-sender\",\n              children: [\"From: \", ((_notification$created = notification.createdBy) === null || _notification$created === void 0 ? void 0 : _notification$created.name) || 'Instructor']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentNotificationPage, \"Pqru2yYlaNeA+swI2cGzEKGLTFU=\", false, function () {\n  return [useAuth];\n});\n_c = StudentNotificationPage;\nexport default StudentNotificationPage;\nvar _c;\n$RefreshReg$(_c, \"StudentNotificationPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","StudentNotificationPage","_s","notifications","setNotifications","loading","setLoading","error","setError","user","fetchNotifications","data","get","headers","Authorization","token","err","_err$response","_err$response$data","response","markAsRead","id","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","_notification$course","_notification$created","isImportant","onClick","_id","title","course","name","message","Date","createdAt","toLocaleString","createdBy","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentNotificationPage.js"],"sourcesContent":["/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\r\n\r\n\r\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport './NotificationStyles.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const { data } = await axios.get('/api/student/notifications', {\r\n          headers: { Authorization: `Bearer ${user.token}` }\r\n        });\r\n        setNotifications(data.notifications);\r\n      } catch (err) {\r\n        setError(err.response?.data?.error || 'Failed to load notifications');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, [user.token]);\r\n\r\n  const markAsRead = (id) => {\r\n    // Implement read status if needed\r\n    console.log(`Marked notification ${id} as read`);\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading notifications...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <h2>Your Notifications</h2>\r\n      \r\n      {notifications.length === 0 ? (\r\n        <div className=\"empty-notifications\">\r\n          No notifications available\r\n        </div>\r\n      ) : (\r\n        <div className=\"notification-list\">\r\n          {notifications.map(notification => (\r\n            <div \r\n              key={notification._id} \r\n              className={`notification-card ${notification.isImportant ? 'important' : ''}`}\r\n              onClick={() => markAsRead(notification._id)}\r\n            >\r\n              <div className=\"notification-header\">\r\n                <h3>{notification.title}</h3>\r\n                <span className=\"notification-course\">{notification.course?.name}</span>\r\n                {notification.isImportant && (\r\n                  <span className=\"important-badge\">Important</span>\r\n                )}\r\n              </div>\r\n              <p className=\"notification-message\">{notification.message}</p>\r\n              <div className=\"notification-footer\">\r\n                <span className=\"notification-date\">\r\n                  {new Date(notification.createdAt).toLocaleString()}\r\n                </span>\r\n                <span className=\"notification-sender\">\r\n                  From: {notification.createdBy?.name || 'Instructor'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEc;EAAK,CAAC,GAAGX,OAAO,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,4BAA4B,EAAE;UAC7DC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUL,IAAI,CAACM,KAAK;UAAG;QACnD,CAAC,CAAC;QACFX,gBAAgB,CAACO,IAAI,CAACR,aAAa,CAAC;MACtC,CAAC,CAAC,OAAOa,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZV,QAAQ,CAAC,EAAAS,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBX,KAAK,KAAI,8BAA8B,CAAC;MACvE,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACD,IAAI,CAACM,KAAK,CAAC,CAAC;EAEhB,MAAMK,UAAU,GAAIC,EAAE,IAAK;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,EAAE,UAAU,CAAC;EAClD,CAAC;EAED,IAAIhB,OAAO,EAAE,oBAAOL,OAAA;IAAKwB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3E,IAAItB,KAAK,EAAE,oBAAOP,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAElB;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACE7B,OAAA;IAAKwB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCzB,OAAA;MAAAyB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1B1B,aAAa,CAAC2B,MAAM,KAAK,CAAC,gBACzB9B,OAAA;MAAKwB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAErC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEN7B,OAAA;MAAKwB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BtB,aAAa,CAAC4B,GAAG,CAACC,YAAY;QAAA,IAAAC,oBAAA,EAAAC,qBAAA;QAAA,oBAC7BlC,OAAA;UAEEwB,SAAS,EAAE,qBAAqBQ,YAAY,CAACG,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;UAC9EC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACY,YAAY,CAACK,GAAG,CAAE;UAAAZ,QAAA,gBAE5CzB,OAAA;YAAKwB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCzB,OAAA;cAAAyB,QAAA,EAAKO,YAAY,CAACM;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7B7B,OAAA;cAAMwB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,GAAAQ,oBAAA,GAAED,YAAY,CAACO,MAAM,cAAAN,oBAAA,uBAAnBA,oBAAA,CAAqBO;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACvEG,YAAY,CAACG,WAAW,iBACvBnC,OAAA;cAAMwB,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAClD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN7B,OAAA;YAAGwB,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAEO,YAAY,CAACS;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9D7B,OAAA;YAAKwB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCzB,OAAA;cAAMwB,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAChC,IAAIiB,IAAI,CAACV,YAAY,CAACW,SAAS,CAAC,CAACC,cAAc,CAAC;YAAC;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,eACP7B,OAAA;cAAMwB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,GAAC,QAC9B,EAAC,EAAAS,qBAAA,GAAAF,YAAY,CAACa,SAAS,cAAAX,qBAAA,uBAAtBA,qBAAA,CAAwBM,IAAI,KAAI,YAAY;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAnBDG,YAAY,CAACK,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBlB,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArEID,uBAAuB;EAAA,QAIVH,OAAO;AAAA;AAAAgD,EAAA,GAJpB7C,uBAAuB;AAuE7B,eAAeA,uBAAuB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}