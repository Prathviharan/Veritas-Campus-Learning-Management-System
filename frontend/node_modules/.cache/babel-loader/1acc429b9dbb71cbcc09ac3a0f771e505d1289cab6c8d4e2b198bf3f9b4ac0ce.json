{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\instructor\\\\InstructorNotificationForm.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { message });\r\n      setFeedback('Notification sent successfully!');\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending notification:', err);\r\n      setFeedback('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-page\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Enter your notification message...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;  */\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../student/Notification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorNotificationForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/notifications', {\n        title,\n        message\n      });\n      setStatus('Notification sent successfully!');\n      setTitle('');\n      setMessage('');\n    } catch (err) {\n      setStatus('Failed to send notification.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorNotificationForm, \"vEviE5ABPv0lgvmYhG2gmI2mDJ8=\");\n_c = InstructorNotificationForm;\nexport default InstructorNotificationForm;\nvar _c;\n$RefreshReg$(_c, \"InstructorNotificationForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","InstructorNotificationForm","_s","title","setTitle","message","setMessage","status","setStatus","handleSubmit","e","preventDefault","post","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/instructor/InstructorNotificationForm.js"],"sourcesContent":["/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { message });\r\n      setFeedback('Notification sent successfully!');\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending notification:', err);\r\n      setFeedback('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-page\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Enter your notification message...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;  */\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../student/Notification.css';\r\n\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { title, message });\r\n      setStatus('Notification sent successfully!');\r\n      setTitle('');\r\n      setMessage('');\r\n    } catch (err) {\r\n      setStatus('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMb,KAAK,CAACc,IAAI,CAAC,yCAAyC,EAAE;QAAET,KAAK;QAAEE;MAAQ,CAAC,CAAC;MAC/EG,SAAS,CAAC,iCAAiC,CAAC;MAC5CJ,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZL,SAAS,CAAC,8BAA8B,CAAC;IAC3C;EACF,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAMoB,QAAQ,EAAEX,YAAa;MAAAM,QAAA,gBAC3Bf,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGd,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnB,OAAA;QACEsB,WAAW,EAAC,SAAS;QACrBC,KAAK,EAAElB,OAAQ;QACfmB,QAAQ,EAAGd,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC5CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACNZ,MAAM,iBAAIP,OAAA;MAAGc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAER;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCID,0BAA0B;AAAA0B,EAAA,GAA1B1B,0BAA0B;AAyChC,eAAeA,0BAA0B;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}