{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\instructor\\\\InstructorNotificationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './InstructorNotificationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorNotificationForm = ({\n  courses = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    message: '',\n    course: '',\n    isImportant: false\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', {\n        title: formData.title,\n        message: formData.message,\n        course: formData.course,\n        isImportant: formData.isImportant\n      });\n      if (response.data.success) {\n        setSuccess('Notification sent successfully!');\n        setFormData({\n          title: '',\n          message: '',\n          course: '',\n          isImportant: false\n        });\n      } else {\n        setError(response.data.error || 'Failed to send notification');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Submission error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Server responded with error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: e => setFormData({\n            ...formData,\n            title: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          value: formData.message,\n          onChange: e => setFormData({\n            ...formData,\n            message: e.target.value\n          }),\n          required: true,\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"course\",\n          value: formData.course,\n          onChange: e => setFormData({\n            ...formData,\n            course: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course._id,\n            children: course.name\n          }, course._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"isImportant\",\n          name: \"isImportant\",\n          checked: formData.isImportant,\n          onChange: e => setFormData({\n            ...formData,\n            isImportant: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isImportant\",\n          children: \"Mark as important\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Send Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorNotificationForm, \"dIX0HevDaJM8N9tHkRYd3sj6K1o=\");\n_c = InstructorNotificationForm;\nexport default InstructorNotificationForm;\nvar _c;\n$RefreshReg$(_c, \"InstructorNotificationForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","InstructorNotificationForm","courses","_s","formData","setFormData","title","message","course","isImportant","error","setError","success","setSuccess","handleSubmit","e","preventDefault","response","post","data","err","_err$response","_err$response$data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","target","required","rows","map","_id","id","checked","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/instructor/InstructorNotificationForm.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = ({ courses = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    message: '',\r\n    course: '',\r\n    isImportant: false\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', {\r\n        title: formData.title,\r\n        message: formData.message,\r\n        course: formData.course,\r\n        isImportant: formData.isImportant\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setSuccess('Notification sent successfully!');\r\n        setFormData({\r\n          title: '',\r\n          message: '',\r\n          course: '',\r\n          isImportant: false\r\n        });\r\n      } else {\r\n        setError(response.data.error || 'Failed to send notification');\r\n      }\r\n    } catch (err) {\r\n      console.error('Submission error:', err);\r\n      setError(err.response?.data?.error || 'Server responded with error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form-container\">\r\n      <h2>Create New Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Message *</label>\r\n          <textarea\r\n            name=\"message\"\r\n            value={formData.message}\r\n            onChange={(e) => setFormData({ ...formData, message: e.target.value })}\r\n            required\r\n            rows=\"5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Course (optional)</label>\r\n          <select\r\n            name=\"course\"\r\n            value={formData.course}\r\n            onChange={(e) => setFormData({ ...formData, course: e.target.value })}\r\n          >\r\n            <option value=\"\">Select a course</option>\r\n            {courses.map((course) => (\r\n              <option key={course._id} value={course._id}>\r\n                {course.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group checkbox-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isImportant\"\r\n            name=\"isImportant\"\r\n            checked={formData.isImportant}\r\n            onChange={(e) => setFormData({ ...formData, isImportant: e.target.checked })}\r\n          />\r\n          <label htmlFor=\"isImportant\">Mark as important</label>\r\n        </div>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Send Notification\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}