{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n// src/pages/student/StudentPrivateFiles.js\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './StudentPrivateFiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [status, setStatus] = useState({\n    error: null,\n    success: null\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const fileInputRef = useRef();\n  const fetchFiles = async () => {\n    setIsLoading(true);\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/files');\n      if (data.success) {\n        setFiles(data.files || []);\n        setStatus({\n          error: null,\n          success: 'Files loaded successfully'\n        });\n      } else {\n        setStatus({\n          error: data.message || 'Failed to load files',\n          success: null\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setStatus({\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Network error',\n        success: null\n      });\n      console.error('Fetch error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setStatus({\n      error: null,\n      success: null\n    });\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setStatus({\n        error: 'Please select a file first',\n        success: null\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setUploadProgress(1); // Start at 1% to show immediate feedback\n      setStatus({\n        error: null,\n        success: null\n      });\n      setIsLoading(true);\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          const percent = Math.round(progress.loaded * 100 / progress.total);\n          setUploadProgress(percent);\n        }\n      });\n      if (data.success && data.file) {\n        // Optimistic UI update\n        setFiles(prevFiles => [data.file, ...prevFiles]);\n        setStatus({\n          error: null,\n          success: 'File uploaded successfully!'\n        });\n        fileInputRef.current.value = '';\n        setSelectedFile(null);\n      } else {\n        setStatus({\n          error: data.message || 'Upload failed',\n          success: null\n        });\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'File upload failed';\n      setStatus({\n        error: errorMsg,\n        success: null\n      });\n      console.error('Upload error:', err);\n    } finally {\n      setUploadProgress(0);\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    try {\n      setIsLoading(true);\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\n      // Optimistic UI update\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\n      setStatus({\n        error: null,\n        success: 'File deleted successfully'\n      });\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setStatus({\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Delete failed',\n        success: null\n      });\n      console.error('Delete error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"private-files-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"private-files-header\",\n      children: \"Private Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileChange,\n          accept: \"*\",\n          className: \"file-input\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUpload,\n          disabled: !selectedFile || isLoading,\n          children: uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), status.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: status.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), status.success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: status.success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"files-list-title\",\n        children: \"Your Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), isLoading && files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading files...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this) : files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files uploaded yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"files-list-items\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/uploads/${file.filename}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"file-link\",\n            children: file.originalname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-size\",\n            children: [\"(\", formatFileSize(file.size), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-date\",\n            children: new Date(file.uploadedAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDelete(file._id),\n            disabled: isLoading,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"FcUaswv4a+3rZtvVTaf4rqC4PtA=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","StudentPrivateFiles","_s","files","setFiles","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","status","setStatus","error","success","isLoading","setIsLoading","fileInputRef","fetchFiles","data","get","message","err","_err$response","_err$response$data","response","console","handleFileChange","e","target","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progress","percent","Math","round","loaded","total","file","prevFiles","current","value","_err$response2","_err$response2$data","_err$response3","_err$response3$data","errorMsg","handleDelete","id","window","confirm","delete","filter","_id","_err$response4","_err$response4$data","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","accept","disabled","onClick","style","width","length","map","href","filename","rel","originalname","size","Date","uploadedAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["// src/pages/student/StudentPrivateFiles.js\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [status, setStatus] = useState({ error: null, success: null });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const fileInputRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      if (data.success) {\r\n        setFiles(data.files || []);\r\n        setStatus({ error: null, success: 'Files loaded successfully' });\r\n      } else {\r\n        setStatus({ error: data.message || 'Failed to load files', success: null });\r\n      }\r\n    } catch (err) {\r\n      setStatus({ \r\n        error: err.response?.data?.message || 'Network error', \r\n        success: null \r\n      });\r\n      console.error('Fetch error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    fetchFiles(); \r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setStatus({ error: null, success: null });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setStatus({ error: 'Please select a file first', success: null });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(1); // Start at 1% to show immediate feedback\r\n      setStatus({ error: null, success: null });\r\n      setIsLoading(true);\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: { \r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success && data.file) {\r\n        // Optimistic UI update\r\n        setFiles(prevFiles => [data.file, ...prevFiles]);\r\n        setStatus({ error: null, success: 'File uploaded successfully!' });\r\n        fileInputRef.current.value = '';\r\n        setSelectedFile(null);\r\n      } else {\r\n        setStatus({ error: data.message || 'Upload failed', success: null });\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.message || \r\n                      err.response?.data?.error || \r\n                      'File upload failed';\r\n      setStatus({ error: errorMsg, success: null });\r\n      console.error('Upload error:', err);\r\n    } finally {\r\n      setUploadProgress(0);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      // Optimistic UI update\r\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\r\n      setStatus({ error: null, success: 'File deleted successfully' });\r\n    } catch (err) {\r\n      setStatus({ \r\n        error: err.response?.data?.message || 'Delete failed', \r\n        success: null \r\n      });\r\n      console.error('Delete error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <div className=\"private-files-container\">\r\n      <h2 className=\"private-files-header\">Private Files</h2>\r\n      \r\n      <div className=\"upload-section\">\r\n        <div className=\"file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            accept=\"*\"\r\n            className=\"file-input\"\r\n            disabled={isLoading}\r\n          />\r\n          <button \r\n            className=\"upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || isLoading}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"progress-indicator\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${uploadProgress}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {status.error && (\r\n          <div className=\"error-message\">\r\n            {status.error}\r\n          </div>\r\n        )}\r\n\r\n        {status.success && (\r\n          <div className=\"success-message\">\r\n            {status.success}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"files-list\">\r\n        <h3 className=\"files-list-title\">Your Files</h3>\r\n        \r\n        {isLoading && files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>Loading files...</p>\r\n          </div>\r\n        ) : files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No files uploaded yet</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"files-list-items\">\r\n            {files.map(file => (\r\n              <li key={file._id} className=\"file-item\">\r\n                <a\r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"file-link\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span className=\"file-size\">\r\n                  ({formatFileSize(file.size)})\r\n                </span>\r\n                <span className=\"file-date\">\r\n                  {new Date(file.uploadedAt).toLocaleDateString()}\r\n                </span>\r\n                <button \r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(file._id)}\r\n                  disabled={isLoading}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}