{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n// src/pages/student/StudentPrivateFiles.js\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport './StudentPrivateFiles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const fileInputRef = useRef();\n  const dropAreaRef = useRef();\n  const fetchFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/files');\n      if (data.success) {\n        setFiles(data.files);\n      } else {\n        setStatusMessage({\n          text: data.message,\n          type: 'error'\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setStatusMessage({\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load files',\n        type: 'error'\n      });\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  // Drag and drop handlers\n  const handleDragEnter = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    const droppedFiles = e.dataTransfer.files;\n    if (droppedFiles.length > 0) {\n      setSelectedFile(droppedFiles[0]);\n      setStatusMessage({\n        text: '',\n        type: ''\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const dropArea = dropAreaRef.current;\n    if (dropArea) {\n      dropArea.addEventListener('dragenter', handleDragEnter);\n      dropArea.addEventListener('dragleave', handleDragLeave);\n      dropArea.addEventListener('dragover', handleDragOver);\n      dropArea.addEventListener('drop', handleDrop);\n      return () => {\n        dropArea.removeEventListener('dragenter', handleDragEnter);\n        dropArea.removeEventListener('dragleave', handleDragLeave);\n        dropArea.removeEventListener('dragover', handleDragOver);\n        dropArea.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n      setStatusMessage({\n        text: '',\n        type: ''\n      });\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setStatusMessage({\n        text: 'Please select a file first',\n        type: 'error'\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setUploadProgress(0);\n      setStatusMessage({\n        text: 'Uploading...',\n        type: 'info'\n      });\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          const percent = Math.round(progress.loaded * 100 / progress.total);\n          setUploadProgress(percent);\n        }\n      });\n      if (data.success) {\n        setFiles(prevFiles => [data.file, ...prevFiles]);\n        setStatusMessage({\n          text: 'File uploaded successfully!',\n          type: 'success'\n        });\n        fileInputRef.current.value = '';\n        setSelectedFile(null);\n      } else {\n        setStatusMessage({\n          text: data.message || 'Upload failed',\n          type: 'error'\n        });\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setStatusMessage({\n        text: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'File upload failed',\n        type: 'error'\n      });\n    } finally {\n      setUploadProgress(0);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    try {\n      const {\n        data\n      } = await axios.delete(`http://localhost:5000/api/files/${id}`);\n      if (data.success) {\n        setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\n        setStatusMessage({\n          text: 'File deleted successfully',\n          type: 'success'\n        });\n      } else {\n        setStatusMessage({\n          text: data.message || 'Delete failed',\n          type: 'error'\n        });\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setStatusMessage({\n        text: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to delete file',\n        type: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"private-files-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"private-files-header\",\n      children: \"Private Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropAreaRef,\n      className: `upload-section ${isDragging ? 'dragging' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileChange,\n            accept: \"*\",\n            className: \"file-input\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"drop-label\",\n            children: selectedFile ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-selected\",\n              children: [\"Selected: \", selectedFile.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setSelectedFile(null);\n                  fileInputRef.current.value = '';\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"drop-text\",\n                children: \"Drag & drop files here or click to browse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"drop-hint\",\n                children: \"(Supports all file types)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUpload,\n          disabled: !selectedFile || uploadProgress > 0,\n          children: uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), statusMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${statusMessage.type}`,\n        children: statusMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"files-list-title\",\n        children: \"Your Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files uploaded yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"files-list-items\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `http://localhost:5000/uploads/${file.filename}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"file-link\",\n              children: file.originalname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-date\",\n              children: new Date(file.uploadedAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDelete(file._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"VsL2tWzhPHTq6c2WAgu6vTY+YHY=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentPrivateFiles","_s","files","setFiles","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","statusMessage","setStatusMessage","text","type","isDragging","setIsDragging","fileInputRef","dropAreaRef","fetchFiles","data","get","success","message","err","_err$response","_err$response$data","response","handleDragEnter","e","preventDefault","stopPropagation","handleDragLeave","handleDragOver","handleDrop","droppedFiles","dataTransfer","length","dropArea","current","addEventListener","removeEventListener","handleFileChange","target","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progress","percent","Math","round","loaded","total","prevFiles","file","value","_err$response2","_err$response2$data","handleDelete","id","window","confirm","delete","filter","_id","_err$response3","_err$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","accept","htmlFor","name","onClick","disabled","style","width","map","href","filename","rel","originalname","size","Date","uploadedAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["// src/pages/student/StudentPrivateFiles.js\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [statusMessage, setStatusMessage] = useState({ text: '', type: '' });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const fileInputRef = useRef();\r\n  const dropAreaRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      if (data.success) {\r\n        setFiles(data.files);\r\n      } else {\r\n        setStatusMessage({ text: data.message, type: 'error' });\r\n      }\r\n    } catch (err) {\r\n      setStatusMessage({ \r\n        text: err.response?.data?.message || 'Failed to load files', \r\n        type: 'error' \r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    fetchFiles(); \r\n  }, []);\r\n\r\n  // Drag and drop handlers\r\n  const handleDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n    \r\n    const droppedFiles = e.dataTransfer.files;\r\n    if (droppedFiles.length > 0) {\r\n      setSelectedFile(droppedFiles[0]);\r\n      setStatusMessage({ text: '', type: '' });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dropArea = dropAreaRef.current;\r\n    if (dropArea) {\r\n      dropArea.addEventListener('dragenter', handleDragEnter);\r\n      dropArea.addEventListener('dragleave', handleDragLeave);\r\n      dropArea.addEventListener('dragover', handleDragOver);\r\n      dropArea.addEventListener('drop', handleDrop);\r\n\r\n      return () => {\r\n        dropArea.removeEventListener('dragenter', handleDragEnter);\r\n        dropArea.removeEventListener('dragleave', handleDragLeave);\r\n        dropArea.removeEventListener('dragover', handleDragOver);\r\n        dropArea.removeEventListener('drop', handleDrop);\r\n      };\r\n    }\r\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setSelectedFile(e.target.files[0]);\r\n      setStatusMessage({ text: '', type: '' });\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setStatusMessage({ text: 'Please select a file first', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setStatusMessage({ text: 'Uploading...', type: 'info' });\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        setFiles(prevFiles => [data.file, ...prevFiles]);\r\n        setStatusMessage({ \r\n          text: 'File uploaded successfully!', \r\n          type: 'success' \r\n        });\r\n        fileInputRef.current.value = '';\r\n        setSelectedFile(null);\r\n      } else {\r\n        setStatusMessage({ \r\n          text: data.message || 'Upload failed', \r\n          type: 'error' \r\n        });\r\n      }\r\n    } catch (err) {\r\n      setStatusMessage({ \r\n        text: err.response?.data?.message || 'File upload failed', \r\n        type: 'error' \r\n      });\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      const { data } = await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      if (data.success) {\r\n        setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\r\n        setStatusMessage({ \r\n          text: 'File deleted successfully', \r\n          type: 'success' \r\n        });\r\n      } else {\r\n        setStatusMessage({ \r\n          text: data.message || 'Delete failed', \r\n          type: 'error' \r\n        });\r\n      }\r\n    } catch (err) {\r\n      setStatusMessage({ \r\n        text: err.response?.data?.message || 'Failed to delete file', \r\n        type: 'error' \r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"private-files-container\">\r\n      <h2 className=\"private-files-header\">Private Files</h2>\r\n      \r\n      <div \r\n        ref={dropAreaRef}\r\n        className={`upload-section ${isDragging ? 'dragging' : ''}`}\r\n      >\r\n        <div className=\"file-input-container\">\r\n          <div className=\"drop-area\">\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={handleFileChange}\r\n              accept=\"*\"\r\n              className=\"file-input\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"drop-label\">\r\n              {selectedFile ? (\r\n                <span className=\"file-selected\">\r\n                  Selected: {selectedFile.name}\r\n                  <button \r\n                    className=\"clear-btn\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setSelectedFile(null);\r\n                      fileInputRef.current.value = '';\r\n                    }}\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </span>\r\n              ) : (\r\n                <>\r\n                  <span className=\"drop-text\">\r\n                    Drag & drop files here or click to browse\r\n                  </span>\r\n                  <span className=\"drop-hint\">\r\n                    (Supports all file types)\r\n                  </span>\r\n                </>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <button \r\n            className=\"upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || uploadProgress > 0}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"progress-indicator\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${uploadProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        )}\r\n\r\n        {statusMessage.text && (\r\n          <div className={`status-message ${statusMessage.type}`}>\r\n            {statusMessage.text}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"files-list\">\r\n        <h3 className=\"files-list-title\">Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No files uploaded yet</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"files-list-items\">\r\n            {files.map(file => (\r\n              <li key={file._id} className=\"file-item\">\r\n                <div className=\"file-info\">\r\n                  <a \r\n                    href={`http://localhost:5000/uploads/${file.filename}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"file-link\"\r\n                  >\r\n                    {file.originalname}\r\n                  </a>\r\n                  <span className=\"file-size\">({Math.round(file.size / 1024)} KB)</span>\r\n                  <span className=\"file-date\">\r\n                    {new Date(file.uploadedAt).toLocaleString()}\r\n                  </span>\r\n                </div>\r\n                <button \r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(file._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}