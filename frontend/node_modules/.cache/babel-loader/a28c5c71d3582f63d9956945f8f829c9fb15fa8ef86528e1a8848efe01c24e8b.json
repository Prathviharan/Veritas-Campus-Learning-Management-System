{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\instructor\\\\InstructorNotificationForm.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { message });\r\n      setFeedback('Notification sent successfully!');\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending notification:', err);\r\n      setFeedback('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-page\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Enter your notification message...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;  */\n\n/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../student/Notification.css';\r\n\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { title, message });\r\n      setStatus('Notification sent successfully!');\r\n      setTitle('');\r\n      setMessage('');\r\n    } catch (err) {\r\n      setStatus('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;   */\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './InstructorNotificationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorNotificationForm = ({\n  courses = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    message: '',\n    course: '',\n    isImportant: false\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', formData);\n      if (response.data.success) {\n        setSuccess('Notification sent successfully!');\n        setFormData({\n          title: '',\n          message: '',\n          course: '',\n          isImportant: false\n        });\n      } else {\n        setError(response.data.error || 'Failed to send notification');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to send notification');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorNotificationForm, \"dIX0HevDaJM8N9tHkRYd3sj6K1o=\");\n_c = InstructorNotificationForm;\nexport default InstructorNotificationForm;\nvar _c;\n$RefreshReg$(_c, \"InstructorNotificationForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","InstructorNotificationForm","courses","_s","formData","setFormData","title","message","course","isImportant","error","setError","success","setSuccess","handleChange","e","name","value","type","checked","target","prev","handleSubmit","preventDefault","response","post","data","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/instructor/InstructorNotificationForm.js"],"sourcesContent":["/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { message });\r\n      setFeedback('Notification sent successfully!');\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending notification:', err);\r\n      setFeedback('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-page\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Enter your notification message...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;  */\r\n\r\n/* import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../student/Notification.css';\r\n\r\n\r\nconst InstructorNotificationForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/notifications', { title, message });\r\n      setStatus('Notification sent successfully!');\r\n      setTitle('');\r\n      setMessage('');\r\n    } catch (err) {\r\n      setStatus('Failed to send notification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form\">\r\n      <h2>Send Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;   */\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = ({ courses = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    message: '',\r\n    course: '',\r\n    isImportant: false\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', formData);\r\n      \r\n      if (response.data.success) {\r\n        setSuccess('Notification sent successfully!');\r\n        setFormData({\r\n          title: '',\r\n          message: '',\r\n          course: '',\r\n          isImportant: false\r\n        });\r\n      } else {\r\n        setError(response.data.error || 'Failed to send notification');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to send notification');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form-container\">\r\n      <h2>Create New Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields same as before */}\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n        <button type=\"submit\">Send Notification</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}