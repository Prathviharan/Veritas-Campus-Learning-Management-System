{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const fileInputRef = useRef();\r\n  const dropAreaRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      setFiles(data.files || data); // Handle both response formats\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to load files. Please try again.');\r\n      console.error('Fetch error:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchFiles(); }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setSelectedFile(e.target.files[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success && data.file) {\r\n        // Update the files list with the new file\r\n        setFiles(prevFiles => [data.file, ...prevFiles]);\r\n        setSuccess('File uploaded successfully!');\r\n        setSelectedFile(null);\r\n        if (fileInputRef.current) fileInputRef.current.value = '';\r\n      } else {\r\n        setError(data.error || 'Upload failed');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || \r\n                      err.message || \r\n                      'File upload failed';\r\n      setError(errorMsg);\r\n      console.error('Upload error:', err);\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete file');\r\n      console.error('Delete error:', err);\r\n      fetchFiles(); // Refresh list if delete fails\r\n    }\r\n  };\r\n\r\n  // Drag and drop handlers (without auto-upload)\r\n  const handleDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n\r\n    const droppedFiles = e.dataTransfer.files;\r\n    if (droppedFiles.length > 0) {\r\n      setSelectedFile(droppedFiles[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dropArea = dropAreaRef.current;\r\n    if (dropArea) {\r\n      dropArea.addEventListener('dragenter', handleDragEnter);\r\n      dropArea.addEventListener('dragleave', handleDragLeave);\r\n      dropArea.addEventListener('dragover', handleDragOver);\r\n      dropArea.addEventListener('drop', handleDrop);\r\n\r\n      return () => {\r\n        dropArea.removeEventListener('dragenter', handleDragEnter);\r\n        dropArea.removeEventListener('dragleave', handleDragLeave);\r\n        dropArea.removeEventListener('dragover', handleDragOver);\r\n        dropArea.removeEventListener('drop', handleDrop);\r\n      };\r\n    }\r\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\r\n\r\n  return (\r\n    <div className=\"private-files-container\">\r\n      <h2 className=\"private-files-header\">Private Files</h2>\r\n      \r\n      <div \r\n        ref={dropAreaRef}\r\n        className={`upload-section ${isDragging ? 'drag-active' : ''}`}\r\n      >\r\n        <div className=\"drag-drop-message\">\r\n          {isDragging ? (\r\n            <div className=\"drag-hint\">Drop your file here</div>\r\n          ) : (\r\n            <div className=\"drag-hint\">Drag & drop files here, or</div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            accept=\"*\"\r\n            className=\"file-input\"\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"browse-btn\">\r\n            Browse Files\r\n          </label>\r\n          {selectedFile && (\r\n            <div className=\"selected-file\">\r\n              Selected: {selectedFile.name} ({Math.round(selectedFile.size / 1024)} KB)\r\n            </div>\r\n          )}\r\n          <button \r\n            className=\"upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || uploadProgress > 0}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"progress-indicator\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${uploadProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n      </div>\r\n\r\n      <div className=\"files-list\">\r\n        <h3 className=\"files-list-title\">Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No files uploaded yet</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"files-list-items\">\r\n            {files.map(file => (\r\n              <li key={file._id} className=\"file-item\">\r\n                <a \r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"file-link\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span className=\"file-size\">({Math.round(file.size / 1024)} KB)</span>\r\n                <button \r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(file._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;  */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport './StudentPrivateFiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isDragging, setIsDragging] = useState(false);\n  const fileInputRef = useRef();\n  const dropAreaRef = useRef();\n  const fetchFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/files');\n      setFiles(data.files || data);\n      setError('');\n    } catch (err) {\n      setError('Failed to load files. Please try again.');\n      console.error('Fetch error:', err);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setError('');\n      setSuccess('');\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setUploadProgress(0);\n      setError('');\n      setSuccess('');\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          const percent = Math.round(progress.loaded * 100 / progress.total);\n          setUploadProgress(percent);\n        }\n      });\n      if (data.success && data.file) {\n        setFiles(prevFiles => [data.file, ...prevFiles]);\n        setSuccess('File uploaded successfully!');\n        setSelectedFile(null);\n        if (fileInputRef.current) fileInputRef.current.value = '';\n      } else {\n        setError(data.error || 'Upload failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || 'File upload failed';\n      setError(errorMsg);\n      console.error('Upload error:', err);\n    } finally {\n      setUploadProgress(0);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\n    } catch (err) {\n      setError('Failed to delete file');\n      console.error('Delete error:', err);\n      fetchFiles();\n    }\n  };\n  const handleDragEnter = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    const droppedFiles = e.dataTransfer.files;\n    if (droppedFiles.length > 0) {\n      setSelectedFile(droppedFiles[0]);\n      setError('');\n      setSuccess('');\n    }\n  }, []);\n  useEffect(() => {\n    const dropArea = dropAreaRef.current;\n    if (dropArea) {\n      dropArea.addEventListener('dragenter', handleDragEnter);\n      dropArea.addEventListener('dragleave', handleDragLeave);\n      dropArea.addEventListener('dragover', handleDragOver);\n      dropArea.addEventListener('drop', handleDrop);\n      return () => {\n        dropArea.removeEventListener('dragenter', handleDragEnter);\n        dropArea.removeEventListener('dragleave', handleDragLeave);\n        dropArea.removeEventListener('dragover', handleDragOver);\n        dropArea.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spf-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"spf-header\",\n      children: \"Private Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropAreaRef,\n      className: `spf-upload-section ${isDragging ? 'drag-active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-drag-message\",\n        children: isDragging ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spf-drag-hint\",\n          children: \"Drop your file here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spf-drag-hint\",\n          children: \"Drag & drop files here, or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileChange,\n          accept: \"*\",\n          className: \"spf-file-input\",\n          id: \"spf-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"spf-file-upload\",\n          className: \"spf-browse-btn\",\n          children: \"Browse Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spf-selected-file\",\n          children: [\"Selected: \", selectedFile.name, \" (\", Math.round(selectedFile.size / 1024), \" KB)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"spf-upload-btn\",\n          onClick: handleUpload,\n          disabled: !selectedFile || uploadProgress > 0,\n          children: uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-progress-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spf-progress-bar\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spf-files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"spf-files-title\",\n        children: \"Your Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spf-empty\",\n        children: \"No files uploaded yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"spf-files-items\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"spf-file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/uploads/${file.filename}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"spf-file-link\",\n            children: file.originalname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spf-file-size\",\n            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"spf-delete-btn\",\n            onClick: () => handleDelete(file._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"tLYwx8nIed6m1Yl5FtLZ9w9OADw=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","jsxDEV","_jsxDEV","StudentPrivateFiles","_s","files","setFiles","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","error","setError","success","setSuccess","isDragging","setIsDragging","fileInputRef","dropAreaRef","fetchFiles","data","get","err","console","handleFileChange","e","target","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progress","percent","Math","round","loaded","total","file","prevFiles","current","value","_err$response","_err$response$data","errorMsg","response","message","handleDelete","id","window","confirm","delete","filter","_id","handleDragEnter","preventDefault","stopPropagation","handleDragLeave","handleDragOver","handleDrop","droppedFiles","dataTransfer","length","dropArea","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","accept","htmlFor","name","size","onClick","disabled","style","width","map","href","filename","rel","originalname","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["/*\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const fileInputRef = useRef();\r\n  const dropAreaRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      setFiles(data.files || data); // Handle both response formats\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to load files. Please try again.');\r\n      console.error('Fetch error:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchFiles(); }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setSelectedFile(e.target.files[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success && data.file) {\r\n        // Update the files list with the new file\r\n        setFiles(prevFiles => [data.file, ...prevFiles]);\r\n        setSuccess('File uploaded successfully!');\r\n        setSelectedFile(null);\r\n        if (fileInputRef.current) fileInputRef.current.value = '';\r\n      } else {\r\n        setError(data.error || 'Upload failed');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || \r\n                      err.message || \r\n                      'File upload failed';\r\n      setError(errorMsg);\r\n      console.error('Upload error:', err);\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete file');\r\n      console.error('Delete error:', err);\r\n      fetchFiles(); // Refresh list if delete fails\r\n    }\r\n  };\r\n\r\n  // Drag and drop handlers (without auto-upload)\r\n  const handleDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n\r\n    const droppedFiles = e.dataTransfer.files;\r\n    if (droppedFiles.length > 0) {\r\n      setSelectedFile(droppedFiles[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dropArea = dropAreaRef.current;\r\n    if (dropArea) {\r\n      dropArea.addEventListener('dragenter', handleDragEnter);\r\n      dropArea.addEventListener('dragleave', handleDragLeave);\r\n      dropArea.addEventListener('dragover', handleDragOver);\r\n      dropArea.addEventListener('drop', handleDrop);\r\n\r\n      return () => {\r\n        dropArea.removeEventListener('dragenter', handleDragEnter);\r\n        dropArea.removeEventListener('dragleave', handleDragLeave);\r\n        dropArea.removeEventListener('dragover', handleDragOver);\r\n        dropArea.removeEventListener('drop', handleDrop);\r\n      };\r\n    }\r\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\r\n\r\n  return (\r\n    <div className=\"private-files-container\">\r\n      <h2 className=\"private-files-header\">Private Files</h2>\r\n      \r\n      <div \r\n        ref={dropAreaRef}\r\n        className={`upload-section ${isDragging ? 'drag-active' : ''}`}\r\n      >\r\n        <div className=\"drag-drop-message\">\r\n          {isDragging ? (\r\n            <div className=\"drag-hint\">Drop your file here</div>\r\n          ) : (\r\n            <div className=\"drag-hint\">Drag & drop files here, or</div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            accept=\"*\"\r\n            className=\"file-input\"\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"browse-btn\">\r\n            Browse Files\r\n          </label>\r\n          {selectedFile && (\r\n            <div className=\"selected-file\">\r\n              Selected: {selectedFile.name} ({Math.round(selectedFile.size / 1024)} KB)\r\n            </div>\r\n          )}\r\n          <button \r\n            className=\"upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || uploadProgress > 0}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"progress-indicator\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${uploadProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n      </div>\r\n\r\n      <div className=\"files-list\">\r\n        <h3 className=\"files-list-title\">Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No files uploaded yet</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"files-list-items\">\r\n            {files.map(file => (\r\n              <li key={file._id} className=\"file-item\">\r\n                <a \r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"file-link\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span className=\"file-size\">({Math.round(file.size / 1024)} KB)</span>\r\n                <button \r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(file._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;  */\r\n\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const fileInputRef = useRef();\r\n  const dropAreaRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      setFiles(data.files || data);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to load files. Please try again.');\r\n      console.error('Fetch error:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setSelectedFile(e.target.files[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      if (data.success && data.file) {\r\n        setFiles((prevFiles) => [data.file, ...prevFiles]);\r\n        setSuccess('File uploaded successfully!');\r\n        setSelectedFile(null);\r\n        if (fileInputRef.current) fileInputRef.current.value = '';\r\n      } else {\r\n        setError(data.error || 'Upload failed');\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || err.message || 'File upload failed';\r\n      setError(errorMsg);\r\n      console.error('Upload error:', err);\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      setFiles((prevFiles) => prevFiles.filter((file) => file._id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete file');\r\n      console.error('Delete error:', err);\r\n      fetchFiles();\r\n    }\r\n  };\r\n\r\n  const handleDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n\r\n    const droppedFiles = e.dataTransfer.files;\r\n    if (droppedFiles.length > 0) {\r\n      setSelectedFile(droppedFiles[0]);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dropArea = dropAreaRef.current;\r\n    if (dropArea) {\r\n      dropArea.addEventListener('dragenter', handleDragEnter);\r\n      dropArea.addEventListener('dragleave', handleDragLeave);\r\n      dropArea.addEventListener('dragover', handleDragOver);\r\n      dropArea.addEventListener('drop', handleDrop);\r\n\r\n      return () => {\r\n        dropArea.removeEventListener('dragenter', handleDragEnter);\r\n        dropArea.removeEventListener('dragleave', handleDragLeave);\r\n        dropArea.removeEventListener('dragover', handleDragOver);\r\n        dropArea.removeEventListener('drop', handleDrop);\r\n      };\r\n    }\r\n  }, [handleDragEnter, handleDragLeave, handleDragOver, handleDrop]);\r\n\r\n  return (\r\n    <div className=\"spf-container\">\r\n      <h2 className=\"spf-header\">Private Files</h2>\r\n\r\n      <div ref={dropAreaRef} className={`spf-upload-section ${isDragging ? 'drag-active' : ''}`}>\r\n        <div className=\"spf-drag-message\">\r\n          {isDragging ? (\r\n            <div className=\"spf-drag-hint\">Drop your file here</div>\r\n          ) : (\r\n            <div className=\"spf-drag-hint\">Drag & drop files here, or</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"spf-file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            accept=\"*\"\r\n            className=\"spf-file-input\"\r\n            id=\"spf-file-upload\"\r\n          />\r\n          <label htmlFor=\"spf-file-upload\" className=\"spf-browse-btn\">\r\n            Browse Files\r\n          </label>\r\n          {selectedFile && (\r\n            <div className=\"spf-selected-file\">\r\n              Selected: {selectedFile.name} ({Math.round(selectedFile.size / 1024)} KB)\r\n            </div>\r\n          )}\r\n          <button\r\n            className=\"spf-upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || uploadProgress > 0}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"spf-progress-indicator\">\r\n            <div className=\"spf-progress-bar\" style={{ width: `${uploadProgress}%` }}></div>\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"spf-error\">{error}</div>}\r\n        {success && <div className=\"spf-success\">{success}</div>}\r\n      </div>\r\n\r\n      <div className=\"spf-files-list\">\r\n        <h3 className=\"spf-files-title\">Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <div className=\"spf-empty\">No files uploaded yet</div>\r\n        ) : (\r\n          <ul className=\"spf-files-items\">\r\n            {files.map((file) => (\r\n              <li key={file._id} className=\"spf-file-item\">\r\n                <a\r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"spf-file-link\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span className=\"spf-file-size\">({Math.round(file.size / 1024)} KB)</span>\r\n                <button className=\"spf-delete-btn\" onClick={() => handleDelete(file._id)}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}