{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentNotificationPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\n\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './StudentNotificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentNotificationPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const res = await axios.get('/api/student/notifications');\n        setNotifications(res.data.notifications);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load notifications');\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n\n    // Set up polling for new notifications every 30 seconds\n    const interval = setInterval(fetchNotifications, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: \"No notifications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-card ${notification.isImportant ? 'important' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-date\",\n            children: new Date(notification.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), notification.course && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-course\",\n          children: [\"Course: \", notification.course.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-instructor\",\n            children: [\"From: \", notification.instructor.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, notification._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentNotificationPage, \"AS6q/RMxLSF4b91ocJSzqFAqRUg=\");\n_c = StudentNotificationPage;\nexport default StudentNotificationPage;\nvar _c;\n$RefreshReg$(_c, \"StudentNotificationPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentNotificationPage","_s","notifications","setNotifications","loading","setLoading","error","setError","fetchNotifications","res","get","data","err","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","isImportant","title","Date","createdAt","toLocaleString","course","name","message","instructor","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentNotificationPage.js"],"sourcesContent":["/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\r\n\r\n\r\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('/api/student/notifications');\r\n        setNotifications(res.data.notifications);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load notifications');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n\r\n    // Set up polling for new notifications every 30 seconds\r\n    const interval = setInterval(fetchNotifications, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"loading\">Loading notifications...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <h2>Notifications</h2>\r\n      \r\n      {notifications.length === 0 ? (\r\n        <div className=\"empty-state\">\r\n          No notifications available\r\n        </div>\r\n      ) : (\r\n        <div className=\"notifications-list\">\r\n          {notifications.map(notification => (\r\n            <div \r\n              key={notification._id} \r\n              className={`notification-card ${notification.isImportant ? 'important' : ''}`}\r\n            >\r\n              <div className=\"notification-header\">\r\n                <h3>{notification.title}</h3>\r\n                <span className=\"notification-date\">\r\n                  {new Date(notification.createdAt).toLocaleString()}\r\n                </span>\r\n              </div>\r\n              \r\n              {notification.course && (\r\n                <div className=\"notification-course\">\r\n                  Course: {notification.course.name}\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"notification-message\">\r\n                {notification.message}\r\n              </div>\r\n              \r\n              <div className=\"notification-footer\">\r\n                <span className=\"notification-instructor\">\r\n                  From: {notification.instructor.name}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}