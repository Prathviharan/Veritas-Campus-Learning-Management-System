{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n// src/pages/student/StudentPrivateFiles.js\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef();\n  const fetchFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/files');\n      setFiles(data);\n      setError('');\n    } catch (err) {\n      setError('Failed to load files. Please try again.');\n      console.error('Fetch error:', err);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setError('');\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setUploadProgress(0);\n      setError('');\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          const percent = Math.round(progress.loaded * 100 / progress.total);\n          setUploadProgress(percent);\n        }\n      });\n      if (data.success) {\n        await fetchFiles();\n        fileInputRef.current.value = '';\n        setSelectedFile(null);\n      } else {\n        setError(data.error || 'Upload failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'File upload failed');\n      console.error('Upload error:', err);\n    } finally {\n      setUploadProgress(0);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\n      fetchFiles();\n    } catch (err) {\n      setError('Failed to delete file');\n      console.error('Delete error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Private Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        accept: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: !selectedFile || uploadProgress > 0,\n        children: uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files uploaded yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/uploads/${file.filename}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: file.originalname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" (\", Math.round(file.size / 1024), \" KB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(file._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"LcLOBFp1n/tEV4l057/bE2isiuw=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","StudentPrivateFiles","_s","files","setFiles","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","error","setError","fileInputRef","fetchFiles","data","get","err","console","handleFileChange","e","target","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progress","percent","Math","round","loaded","total","success","current","value","_err$response","_err$response$data","response","handleDelete","id","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","accept","onClick","disabled","style","color","length","map","file","href","filename","rel","originalname","size","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["// src/pages/student/StudentPrivateFiles.js\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const fileInputRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      setFiles(data);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to load files. Please try again.');\r\n      console.error('Fetch error:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchFiles(); }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setError('');\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setError('');\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: (progress) => {\r\n            const percent = Math.round((progress.loaded * 100) / progress.total);\r\n            setUploadProgress(percent);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        await fetchFiles();\r\n        fileInputRef.current.value = '';\r\n        setSelectedFile(null);\r\n      } else {\r\n        setError(data.error || 'Upload failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'File upload failed');\r\n      console.error('Upload error:', err);\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      fetchFiles();\r\n    } catch (err) {\r\n      setError('Failed to delete file');\r\n      console.error('Delete error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Private Files</h2>\r\n      \r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={handleFileChange}\r\n          accept=\"*\"\r\n        />\r\n        <button \r\n          onClick={handleUpload}\r\n          disabled={!selectedFile || uploadProgress > 0}\r\n        >\r\n          {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n\r\n      <div>\r\n        <h3>Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <p>No files uploaded yet</p>\r\n        ) : (\r\n          <ul>\r\n            {files.map(file => (\r\n              <li key={file._id}>\r\n                <a \r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span> ({Math.round(file.size / 1024)} KB)</span>\r\n                <button onClick={() => handleDelete(file._id)}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}