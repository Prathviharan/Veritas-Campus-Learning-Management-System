{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\instructor\\\\InstructorNotificationForm.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = ({ courses = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    message: '',\r\n    course: '',\r\n    isImportant: false\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', {\r\n        title: formData.title,\r\n        message: formData.message,\r\n        course: formData.course,\r\n        isImportant: formData.isImportant\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setSuccess('Notification sent successfully!');\r\n        setFormData({\r\n          title: '',\r\n          message: '',\r\n          course: '',\r\n          isImportant: false\r\n        });\r\n      } else {\r\n        setError(response.data.error || 'Failed to send notification');\r\n      }\r\n    } catch (err) {\r\n      console.error('Submission error:', err);\r\n      setError(err.response?.data?.error || 'Server responded with error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form-container\">\r\n      <h2>Create New Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Message *</label>\r\n          <textarea\r\n            name=\"message\"\r\n            value={formData.message}\r\n            onChange={(e) => setFormData({ ...formData, message: e.target.value })}\r\n            required\r\n            rows=\"5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Course (optional)</label>\r\n          <select\r\n            name=\"course\"\r\n            value={formData.course}\r\n            onChange={(e) => setFormData({ ...formData, course: e.target.value })}\r\n          >\r\n            <option value=\"\">Select a course</option>\r\n            {courses.map((course) => (\r\n              <option key={course._id} value={course._id}>\r\n                {course.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group checkbox-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isImportant\"\r\n            name=\"isImportant\"\r\n            checked={formData.isImportant}\r\n            onChange={(e) => setFormData({ ...formData, isImportant: e.target.checked })}\r\n          />\r\n          <label htmlFor=\"isImportant\">Mark as important</label>\r\n        </div>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Send Notification\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;    */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './InstructorNotificationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorNotificationForm = ({\n  courses = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    message: '',\n    course: '',\n    isImportant: false,\n    image: null\n  });\n  const [notifications, setNotifications] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Fetch all notifications\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/instructor/notifications');\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      }\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleFileChange = e => {\n    setFormData({\n      ...formData,\n      image: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setError('');\n    setSuccess('');\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('title', formData.title);\n      formDataToSend.append('message', formData.message);\n      formDataToSend.append('course', formData.course);\n      formDataToSend.append('isImportant', formData.isImportant);\n      if (formData.image) {\n        formDataToSend.append('image', formData.image);\n      }\n      let response;\n      if (editingId) {\n        response = await axios.put(`http://localhost:5000/api/instructor/notifications/${editingId}`, formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        response = await axios.post('http://localhost:5000/api/instructor/notifications', formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n      if (response.data.success) {\n        setSuccess(editingId ? 'Notification updated successfully!' : 'Notification sent successfully!');\n        resetForm();\n        fetchNotifications();\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Server responded with error');\n      console.error('Submission error:', err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      message: '',\n      course: '',\n      isImportant: false,\n      image: null\n    });\n    setEditingId(null);\n  };\n  const handleEdit = notification => {\n    var _notification$course;\n    setFormData({\n      title: notification.title,\n      message: notification.message,\n      course: ((_notification$course = notification.course) === null || _notification$course === void 0 ? void 0 : _notification$course._id) || '',\n      isImportant: notification.isImportant,\n      image: null\n    });\n    setEditingId(notification._id);\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this notification?')) {\n      try {\n        const response = await axios.delete(`http://localhost:5000/api/instructor/notifications/${id}`);\n        if (response.data.success) {\n          setSuccess('Notification deleted successfully!');\n          fetchNotifications();\n        }\n      } catch (err) {\n        var _err$response2, _err$response2$data;\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to delete notification');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editingId ? 'Edit Notification' : 'Create New Notification'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: formData.title,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Message *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            value: formData.message,\n            onChange: handleChange,\n            required: true,\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            onChange: handleFileChange,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Course (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"course\",\n            value: formData.course,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: course._id,\n              children: course.name\n            }, course._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"isImportant\",\n            name: \"isImportant\",\n            checked: formData.isImportant,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isImportant\",\n            children: \"Mark as important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Processing...' : editingId ? 'Update Notification' : 'Send Notification'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: resetForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notifications created yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-grid\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-item\",\n          children: [notification.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000${notification.imageUrl}`,\n              alt: \"Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(notification.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this), notification.course && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"course-tag\",\n                children: notification.course.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this), notification.isImportant && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"important-tag\",\n                children: \"Important\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => handleEdit(notification),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(notification._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorNotificationForm, \"fljRETLfTUr/2eNPfvnM5VOZQTM=\");\n_c = InstructorNotificationForm;\nexport default InstructorNotificationForm;\nvar _c;\n$RefreshReg$(_c, \"InstructorNotificationForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","InstructorNotificationForm","courses","_s","formData","setFormData","title","message","course","isImportant","image","notifications","setNotifications","editingId","setEditingId","error","setError","success","setSuccess","isSubmitting","setIsSubmitting","fetchNotifications","response","get","data","console","handleChange","e","name","value","type","checked","target","handleFileChange","files","handleSubmit","preventDefault","formDataToSend","FormData","append","put","headers","post","resetForm","err","_err$response","_err$response$data","handleEdit","notification","_notification$course","_id","window","scrollTo","handleDelete","id","confirm","delete","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","rows","accept","map","htmlFor","disabled","onClick","length","imageUrl","src","alt","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/instructor/InstructorNotificationForm.js"],"sourcesContent":["\r\n\r\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = ({ courses = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    message: '',\r\n    course: '',\r\n    isImportant: false\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/instructor/notifications', {\r\n        title: formData.title,\r\n        message: formData.message,\r\n        course: formData.course,\r\n        isImportant: formData.isImportant\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setSuccess('Notification sent successfully!');\r\n        setFormData({\r\n          title: '',\r\n          message: '',\r\n          course: '',\r\n          isImportant: false\r\n        });\r\n      } else {\r\n        setError(response.data.error || 'Failed to send notification');\r\n      }\r\n    } catch (err) {\r\n      console.error('Submission error:', err);\r\n      setError(err.response?.data?.error || 'Server responded with error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-form-container\">\r\n      <h2>Create New Notification</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Message *</label>\r\n          <textarea\r\n            name=\"message\"\r\n            value={formData.message}\r\n            onChange={(e) => setFormData({ ...formData, message: e.target.value })}\r\n            required\r\n            rows=\"5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Course (optional)</label>\r\n          <select\r\n            name=\"course\"\r\n            value={formData.course}\r\n            onChange={(e) => setFormData({ ...formData, course: e.target.value })}\r\n          >\r\n            <option value=\"\">Select a course</option>\r\n            {courses.map((course) => (\r\n              <option key={course._id} value={course._id}>\r\n                {course.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group checkbox-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isImportant\"\r\n            name=\"isImportant\"\r\n            checked={formData.isImportant}\r\n            onChange={(e) => setFormData({ ...formData, isImportant: e.target.checked })}\r\n          />\r\n          <label htmlFor=\"isImportant\">Mark as important</label>\r\n        </div>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Send Notification\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;    */\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './InstructorNotificationForm.css';\r\n\r\nconst InstructorNotificationForm = ({ courses = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    message: '',\r\n    course: '',\r\n    isImportant: false,\r\n    image: null\r\n  });\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Fetch all notifications\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/instructor/notifications');\r\n      if (response.data.success) {\r\n        setNotifications(response.data.notifications);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      image: e.target.files[0]\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append('title', formData.title);\r\n      formDataToSend.append('message', formData.message);\r\n      formDataToSend.append('course', formData.course);\r\n      formDataToSend.append('isImportant', formData.isImportant);\r\n      if (formData.image) {\r\n        formDataToSend.append('image', formData.image);\r\n      }\r\n\r\n      let response;\r\n      if (editingId) {\r\n        response = await axios.put(\r\n          `http://localhost:5000/api/instructor/notifications/${editingId}`,\r\n          formDataToSend,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        response = await axios.post(\r\n          'http://localhost:5000/api/instructor/notifications',\r\n          formDataToSend,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      if (response.data.success) {\r\n        setSuccess(editingId ? 'Notification updated successfully!' : 'Notification sent successfully!');\r\n        resetForm();\r\n        fetchNotifications();\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Server responded with error');\r\n      console.error('Submission error:', err);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      message: '',\r\n      course: '',\r\n      isImportant: false,\r\n      image: null\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  const handleEdit = (notification) => {\r\n    setFormData({\r\n      title: notification.title,\r\n      message: notification.message,\r\n      course: notification.course?._id || '',\r\n      isImportant: notification.isImportant,\r\n      image: null\r\n    });\r\n    setEditingId(notification._id);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this notification?')) {\r\n      try {\r\n        const response = await axios.delete(`http://localhost:5000/api/instructor/notifications/${id}`);\r\n        if (response.data.success) {\r\n          setSuccess('Notification deleted successfully!');\r\n          fetchNotifications();\r\n        }\r\n      } catch (err) {\r\n        setError(err.response?.data?.error || 'Failed to delete notification');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-management\">\r\n      <div className=\"notification-form-container\">\r\n        <h2>{editingId ? 'Edit Notification' : 'Create New Notification'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Title *</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Message *</label>\r\n            <textarea\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              required\r\n              rows=\"5\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Image (optional)</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              onChange={handleFileChange}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Course (optional)</label>\r\n            <select\r\n              name=\"course\"\r\n              value={formData.course}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Select a course</option>\r\n              {courses.map((course) => (\r\n                <option key={course._id} value={course._id}>\r\n                  {course.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group checkbox-group\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"isImportant\"\r\n              name=\"isImportant\"\r\n              checked={formData.isImportant}\r\n              onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"isImportant\">Mark as important</label>\r\n          </div>\r\n\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {success && <div className=\"success-message\">{success}</div>}\r\n\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting}>\r\n            {isSubmitting ? 'Processing...' : (editingId ? 'Update Notification' : 'Send Notification')}\r\n          </button>\r\n          {editingId && (\r\n            <button type=\"button\" className=\"cancel-btn\" onClick={resetForm}>\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"notification-list\">\r\n        <h3>Your Notifications</h3>\r\n        {notifications.length === 0 ? (\r\n          <p>No notifications created yet</p>\r\n        ) : (\r\n          <div className=\"notifications-grid\">\r\n            {notifications.map((notification) => (\r\n              <div key={notification._id} className=\"notification-item\">\r\n                {notification.imageUrl && (\r\n                  <div className=\"notification-image\">\r\n                    <img \r\n                      src={`http://localhost:5000${notification.imageUrl}`} \r\n                      alt=\"Notification\" \r\n                    />\r\n                  </div>\r\n                )}\r\n                <div className=\"notification-content\">\r\n                  <h4>{notification.title}</h4>\r\n                  <p>{notification.message}</p>\r\n                  <div className=\"notification-meta\">\r\n                    <span>{new Date(notification.createdAt).toLocaleString()}</span>\r\n                    {notification.course && (\r\n                      <span className=\"course-tag\">{notification.course.name}</span>\r\n                    )}\r\n                    {notification.isImportant && (\r\n                      <span className=\"important-tag\">Important</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"notification-actions\">\r\n                  <button \r\n                    className=\"edit-button\"\r\n                    onClick={() => handleEdit(notification)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-btn\"\r\n                    onClick={() => handleDelete(notification._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNotificationForm;\r\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,0BAA0B,GAAGA,CAAC;EAAEC,OAAO,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,KAAK;IAClBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMyB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,oDAAoD,CAAC;MACtF,IAAID,QAAQ,CAACE,IAAI,CAACP,OAAO,EAAE;QACzBL,gBAAgB,CAACU,QAAQ,CAACE,IAAI,CAACb,aAAa,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdwB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAC/C3B,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACwB,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,gBAAgB,GAAIN,CAAC,IAAK;IAC9BtB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXM,KAAK,EAAEiB,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOR,CAAC,IAAK;IAChCA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClBhB,eAAe,CAAC,IAAI,CAAC;IACrBJ,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAMmB,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACrCD,cAAc,CAACE,MAAM,CAAC,OAAO,EAAEnC,QAAQ,CAACE,KAAK,CAAC;MAC9C+B,cAAc,CAACE,MAAM,CAAC,SAAS,EAAEnC,QAAQ,CAACG,OAAO,CAAC;MAClD8B,cAAc,CAACE,MAAM,CAAC,QAAQ,EAAEnC,QAAQ,CAACI,MAAM,CAAC;MAChD6B,cAAc,CAACE,MAAM,CAAC,aAAa,EAAEnC,QAAQ,CAACK,WAAW,CAAC;MAC1D,IAAIL,QAAQ,CAACM,KAAK,EAAE;QAClB2B,cAAc,CAACE,MAAM,CAAC,OAAO,EAAEnC,QAAQ,CAACM,KAAK,CAAC;MAChD;MAEA,IAAIY,QAAQ;MACZ,IAAIT,SAAS,EAAE;QACbS,QAAQ,GAAG,MAAMxB,KAAK,CAAC0C,GAAG,CACxB,sDAAsD3B,SAAS,EAAE,EACjEwB,cAAc,EACd;UACEI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;MACH,CAAC,MAAM;QACLnB,QAAQ,GAAG,MAAMxB,KAAK,CAAC4C,IAAI,CACzB,oDAAoD,EACpDL,cAAc,EACd;UACEI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;MACH;MAEA,IAAInB,QAAQ,CAACE,IAAI,CAACP,OAAO,EAAE;QACzBC,UAAU,CAACL,SAAS,GAAG,oCAAoC,GAAG,iCAAiC,CAAC;QAChG8B,SAAS,CAAC,CAAC;QACXtB,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ9B,QAAQ,CAAC,EAAA6B,aAAA,GAAAD,GAAG,CAACtB,QAAQ,cAAAuB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcrB,IAAI,cAAAsB,kBAAA,uBAAlBA,kBAAA,CAAoB/B,KAAK,KAAI,6BAA6B,CAAC;MACpEU,OAAO,CAACV,KAAK,CAAC,mBAAmB,EAAE6B,GAAG,CAAC;IACzC,CAAC,SAAS;MACRxB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMuB,SAAS,GAAGA,CAAA,KAAM;IACtBtC,WAAW,CAAC;MACVC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;IACFI,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMiC,UAAU,GAAIC,YAAY,IAAK;IAAA,IAAAC,oBAAA;IACnC5C,WAAW,CAAC;MACVC,KAAK,EAAE0C,YAAY,CAAC1C,KAAK;MACzBC,OAAO,EAAEyC,YAAY,CAACzC,OAAO;MAC7BC,MAAM,EAAE,EAAAyC,oBAAA,GAAAD,YAAY,CAACxC,MAAM,cAAAyC,oBAAA,uBAAnBA,oBAAA,CAAqBC,GAAG,KAAI,EAAE;MACtCzC,WAAW,EAAEuC,YAAY,CAACvC,WAAW;MACrCC,KAAK,EAAE;IACT,CAAC,CAAC;IACFI,YAAY,CAACkC,YAAY,CAACE,GAAG,CAAC;IAC9BC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAIH,MAAM,CAACI,OAAO,CAAC,oDAAoD,CAAC,EAAE;MACxE,IAAI;QACF,MAAMjC,QAAQ,GAAG,MAAMxB,KAAK,CAAC0D,MAAM,CAAC,sDAAsDF,EAAE,EAAE,CAAC;QAC/F,IAAIhC,QAAQ,CAACE,IAAI,CAACP,OAAO,EAAE;UACzBC,UAAU,CAAC,oCAAoC,CAAC;UAChDG,kBAAkB,CAAC,CAAC;QACtB;MACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;QAAA,IAAAa,cAAA,EAAAC,mBAAA;QACZ1C,QAAQ,CAAC,EAAAyC,cAAA,GAAAb,GAAG,CAACtB,QAAQ,cAAAmC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcjC,IAAI,cAAAkC,mBAAA,uBAAlBA,mBAAA,CAAoB3C,KAAK,KAAI,+BAA+B,CAAC;MACxE;IACF;EACF,CAAC;EAED,oBACEf,OAAA;IAAK2D,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC5D,OAAA;MAAK2D,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1C5D,OAAA;QAAA4D,QAAA,EAAK/C,SAAS,GAAG,mBAAmB,GAAG;MAAyB;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtEhE,OAAA;QAAMiE,QAAQ,EAAE9B,YAAa;QAAAyB,QAAA,gBAC3B5D,OAAA;UAAK2D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5D,OAAA;YAAA4D,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBhE,OAAA;YACE8B,IAAI,EAAC,MAAM;YACXF,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEzB,QAAQ,CAACE,KAAM;YACtB4D,QAAQ,EAAExC,YAAa;YACvByC,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5D,OAAA;YAAA4D,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBhE,OAAA;YACE4B,IAAI,EAAC,SAAS;YACdC,KAAK,EAAEzB,QAAQ,CAACG,OAAQ;YACxB2D,QAAQ,EAAExC,YAAa;YACvByC,QAAQ;YACRC,IAAI,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5D,OAAA;YAAA4D,QAAA,EAAO;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/BhE,OAAA;YACE8B,IAAI,EAAC,MAAM;YACXF,IAAI,EAAC,OAAO;YACZsC,QAAQ,EAAEjC,gBAAiB;YAC3BoC,MAAM,EAAC;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5D,OAAA;YAAA4D,QAAA,EAAO;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChChE,OAAA;YACE4B,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEzB,QAAQ,CAACI,MAAO;YACvB0D,QAAQ,EAAExC,YAAa;YAAAkC,QAAA,gBAEvB5D,OAAA;cAAQ6B,KAAK,EAAC,EAAE;cAAA+B,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxC9D,OAAO,CAACoE,GAAG,CAAE9D,MAAM,iBAClBR,OAAA;cAAyB6B,KAAK,EAAErB,MAAM,CAAC0C,GAAI;cAAAU,QAAA,EACxCpD,MAAM,CAACoB;YAAI,GADDpB,MAAM,CAAC0C,GAAG;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEf,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,2BAA2B;UAAAC,QAAA,gBACxC5D,OAAA;YACE8B,IAAI,EAAC,UAAU;YACfwB,EAAE,EAAC,aAAa;YAChB1B,IAAI,EAAC,aAAa;YAClBG,OAAO,EAAE3B,QAAQ,CAACK,WAAY;YAC9ByD,QAAQ,EAAExC;UAAa;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFhE,OAAA;YAAOuE,OAAO,EAAC,aAAa;YAAAX,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,EAELjD,KAAK,iBAAIf,OAAA;UAAK2D,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE7C;QAAK;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACrD/C,OAAO,iBAAIjB,OAAA;UAAK2D,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE3C;QAAO;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAE5DhE,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAAC6B,SAAS,EAAC,YAAY;UAACa,QAAQ,EAAErD,YAAa;UAAAyC,QAAA,EACjEzC,YAAY,GAAG,eAAe,GAAIN,SAAS,GAAG,qBAAqB,GAAG;QAAoB;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CAAC,EACRnD,SAAS,iBACRb,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAAC6B,SAAS,EAAC,YAAY;UAACc,OAAO,EAAE9B,SAAU;UAAAiB,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENhE,OAAA;MAAK2D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC5D,OAAA;QAAA4D,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1BrD,aAAa,CAAC+D,MAAM,KAAK,CAAC,gBACzB1E,OAAA;QAAA4D,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEnChE,OAAA;QAAK2D,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCjD,aAAa,CAAC2D,GAAG,CAAEtB,YAAY,iBAC9BhD,OAAA;UAA4B2D,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GACtDZ,YAAY,CAAC2B,QAAQ,iBACpB3E,OAAA;YAAK2D,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjC5D,OAAA;cACE4E,GAAG,EAAE,wBAAwB5B,YAAY,CAAC2B,QAAQ,EAAG;cACrDE,GAAG,EAAC;YAAc;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,eACDhE,OAAA;YAAK2D,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC5D,OAAA;cAAA4D,QAAA,EAAKZ,YAAY,CAAC1C;YAAK;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BhE,OAAA;cAAA4D,QAAA,EAAIZ,YAAY,CAACzC;YAAO;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BhE,OAAA;cAAK2D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChC5D,OAAA;gBAAA4D,QAAA,EAAO,IAAIkB,IAAI,CAAC9B,YAAY,CAAC+B,SAAS,CAAC,CAACC,cAAc,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAC/DhB,YAAY,CAACxC,MAAM,iBAClBR,OAAA;gBAAM2D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEZ,YAAY,CAACxC,MAAM,CAACoB;cAAI;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAC9D,EACAhB,YAAY,CAACvC,WAAW,iBACvBT,OAAA;gBAAM2D,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAChD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNhE,OAAA;YAAK2D,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC5D,OAAA;cACE2D,SAAS,EAAC,aAAa;cACvBc,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAACC,YAAY,CAAE;cAAAY,QAAA,EACzC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThE,OAAA;cACE2D,SAAS,EAAC,YAAY;cACtBc,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACL,YAAY,CAACE,GAAG,CAAE;cAAAU,QAAA,EAC/C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GAnCEhB,YAAY,CAACE,GAAG;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoCrB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAtQIF,0BAA0B;AAAAgF,EAAA,GAA1BhF,0BAA0B;AAwQhC,eAAeA,0BAA0B;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}