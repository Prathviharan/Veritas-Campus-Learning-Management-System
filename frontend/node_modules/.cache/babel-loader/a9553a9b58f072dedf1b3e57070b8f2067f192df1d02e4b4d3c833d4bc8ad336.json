{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n// src/pages/student/StudentPrivateFiles.js\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './StudentPrivateFiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [status, setStatus] = useState({\n    error: null,\n    success: null\n  });\n  const fileInputRef = useRef();\n  const fetchFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/files');\n      if (data.success) {\n        setFiles(data.files);\n        setStatus({\n          error: null,\n          success: 'Files loaded successfully'\n        });\n      } else {\n        setStatus({\n          error: data.message || 'Failed to load files',\n          success: null\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setStatus({\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Network error',\n        success: null\n      });\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setStatus({\n      error: null,\n      success: null\n    });\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setStatus({\n        error: 'Please select a file first',\n        success: null\n      });\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setUploadProgress(0);\n      setStatus({\n        error: null,\n        success: null\n      });\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progress => {\n          setUploadProgress(Math.round(progress.loaded * 100 / progress.total));\n        }\n      });\n      if (data.success) {\n        // Optimistically update the UI\n        setFiles(prevFiles => [data.file, ...prevFiles]);\n        setStatus({\n          error: null,\n          success: data.message\n        });\n        fileInputRef.current.value = '';\n        setSelectedFile(null);\n      } else {\n        setStatus({\n          error: data.message,\n          success: null\n        });\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setStatus({\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Upload failed',\n        success: null\n      });\n    } finally {\n      setUploadProgress(0);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\n      // Optimistically update the UI\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\n    } catch (err) {\n      setError('Failed to delete file');\n      console.error('Delete error:', err);\n      // Revert by refreshing from server\n      fetchFiles();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"private-files-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"private-files-header\",\n      children: \"Private Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileChange,\n          accept: \"*\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUpload,\n          disabled: !selectedFile || uploadProgress > 0,\n          children: uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"files-list-title\",\n        children: \"Your Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files uploaded yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"files-list-items\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/uploads/${file.filename}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"file-link\",\n            children: file.originalname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-size\",\n            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDelete(file._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)]\n        }, file._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"SIrhegVguv1pd+GKADpjRd7+b7U=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","StudentPrivateFiles","_s","files","setFiles","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","status","setStatus","error","success","fileInputRef","fetchFiles","data","get","message","err","_err$response","_err$response$data","response","handleFileChange","e","target","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progress","Math","round","loaded","total","prevFiles","file","current","value","_err$response2","_err$response2$data","handleDelete","id","window","confirm","delete","filter","_id","setError","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","accept","onClick","disabled","style","width","length","map","href","filename","rel","originalname","size","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["// src/pages/student/StudentPrivateFiles.js\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId] = useState('student123'); // Replace this with dynamic ID if needed\r\n  const [message, setMessage] = useState('');\r\n  const [privateFiles, setPrivateFiles] = useState([]);\r\n\r\n  const fetchPrivateFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/private-files/${studentId}`);\r\n      setPrivateFiles(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n    }\r\n  }, [studentId]);\r\n\r\n  useEffect(() => {\r\n    fetchPrivateFiles();\r\n  }, [fetchPrivateFiles]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/student/private-files/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setMessage('File uploaded successfully.');\r\n      setSelectedFile(null);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/private-files/${fileId}`);\r\n      fetchPrivateFiles(); // Refresh file list\r\n    } catch (err) {\r\n      console.error('Delete failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {privateFiles.length === 0 ? (\r\n          <p>No private files uploaded.</p>\r\n        ) : (\r\n          <ul>\r\n            {privateFiles.map((file) => (\r\n              <li key={file._id}>\r\n                <a\r\n                  href={`http://localhost:5000/${file.filePath}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles; */\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [status, setStatus] = useState({ error: null, success: null });\r\n  const fileInputRef = useRef();\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const { data } = await axios.get('http://localhost:5000/api/files');\r\n      if (data.success) {\r\n        setFiles(data.files);\r\n        setStatus({ error: null, success: 'Files loaded successfully' });\r\n      } else {\r\n        setStatus({ error: data.message || 'Failed to load files', success: null });\r\n      }\r\n    } catch (err) {\r\n      setStatus({ \r\n        error: err.response?.data?.message || 'Network error', \r\n        success: null \r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchFiles(); }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setStatus({ error: null, success: null });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setStatus({ error: 'Please select a file first', success: null });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      setStatus({ error: null, success: null });\r\n\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/files/upload', \r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n          onUploadProgress: (progress) => {\r\n            setUploadProgress(Math.round((progress.loaded * 100) / progress.total));\r\n          }\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        // Optimistically update the UI\r\n        setFiles(prevFiles => [data.file, ...prevFiles]);\r\n        setStatus({ error: null, success: data.message });\r\n        fileInputRef.current.value = '';\r\n        setSelectedFile(null);\r\n      } else {\r\n        setStatus({ error: data.message, success: null });\r\n      }\r\n    } catch (err) {\r\n      setStatus({ \r\n        error: err.response?.data?.message || 'Upload failed', \r\n        success: null \r\n      });\r\n    } finally {\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    \r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/files/${id}`);\r\n      // Optimistically update the UI\r\n      setFiles(prevFiles => prevFiles.filter(file => file._id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete file');\r\n      console.error('Delete error:', err);\r\n      // Revert by refreshing from server\r\n      fetchFiles();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"private-files-container\">\r\n      <h2 className=\"private-files-header\">Private Files</h2>\r\n      \r\n      <div className=\"upload-section\">\r\n        <div className=\"file-input-container\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            accept=\"*\"\r\n            className=\"file-input\"\r\n          />\r\n          <button \r\n            className=\"upload-btn\"\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || uploadProgress > 0}\r\n          >\r\n            {uploadProgress > 0 ? `Uploading... ${uploadProgress}%` : 'Upload'}\r\n          </button>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && (\r\n          <div className=\"progress-indicator\">\r\n            <div \r\n              className=\"progress-bar\" \r\n              style={{ width: `${uploadProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n      </div>\r\n\r\n      <div className=\"files-list\">\r\n        <h3 className=\"files-list-title\">Your Files</h3>\r\n        {files.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No files uploaded yet</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"files-list-items\">\r\n            {files.map(file => (\r\n              <li key={file._id} className=\"file-item\">\r\n                <a \r\n                  href={`http://localhost:5000/uploads/${file.filename}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"file-link\"\r\n                >\r\n                  {file.originalname}\r\n                </a>\r\n                <span className=\"file-size\">({Math.round(file.size / 1024)} KB)</span>\r\n                <button \r\n                  className=\"delete-btn\"\r\n                  onClick={() => handleDelete(file._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}