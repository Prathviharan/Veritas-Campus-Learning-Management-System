{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentPrivateFiles.js\",\n  _s = $RefreshSig$();\n// StudentPrivateFiles.js\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId, setStudentId] = useState('student123'); // Replace this dynamically if needed\r\n  const [message, setMessage] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/files/${studentId}`);\r\n      setUploadedFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setSelectedFile(e.dataTransfer.files[0]);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return alert(\"Please select a file.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/student/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n\r\n      setMessage('File uploaded successfully!');\r\n      setSelectedFile(null);\r\n      fetchFiles();\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      setMessage('Upload failed.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/files/${fileId}`);\r\n      fetchFiles();\r\n    } catch (error) {\r\n      console.error('Delete failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div\r\n        className=\"drop-zone\"\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n      >\r\n        {selectedFile ? selectedFile.name : 'Drag & drop a file or click to select'}\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n      </div>\r\n\r\n      <button className=\"upload-button\" onClick={handleUpload}>Upload</button>\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {uploadedFiles.length === 0 ? (\r\n          <p>No files uploaded yet.</p>\r\n        ) : (\r\n          <ul>\r\n            {uploadedFiles.map(file => (\r\n              <li key={file._id}>\r\n                <a href={`http://localhost:5000/${file.filePath}`} target=\"_blank\" rel=\"noreferrer\">\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;          */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./StudentPrivateFiles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPrivateFiles = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const fileInputRef = useRef();\n  const studentName = \"John Doe\"; // Replace with dynamic student name if available\n\n  const fetchFiles = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/student/files/${studentName}`);\n      setUploadedFiles(res.data);\n    } catch (err) {\n      console.error(\"Error fetching files\", err);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"studentName\", studentName);\n    try {\n      await axios.post(\"http://localhost:5000/api/student/files/upload\", formData);\n      setFile(null);\n      fileInputRef.current.value = null;\n      fetchFiles(); // Refresh list\n    } catch (err) {\n      console.error(\"Upload failed\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Private File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), uploadedFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedFiles.map(fileData => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:5000/${fileData.filePath}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: fileData.filePath.split(\"/\").pop()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), \" \\u2014 Uploaded at: \", new Date(fileData.uploadedAt).toLocaleString()]\n      }, fileData._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPrivateFiles, \"64kHiF1alQ+I/MTqxd7LWfW3oGA=\");\n_c = StudentPrivateFiles;\nexport default StudentPrivateFiles;\nvar _c;\n$RefreshReg$(_c, \"StudentPrivateFiles\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","StudentPrivateFiles","_s","file","setFile","uploadedFiles","setUploadedFiles","fileInputRef","studentName","fetchFiles","res","get","data","err","console","error","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","current","value","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","ref","onClick","disabled","length","map","fileData","href","filePath","rel","split","pop","Date","uploadedAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentPrivateFiles.js"],"sourcesContent":["// StudentPrivateFiles.js\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentPrivateFiles.css';\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [studentId, setStudentId] = useState('student123'); // Replace this dynamically if needed\r\n  const [message, setMessage] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/student/files/${studentId}`);\r\n      setUploadedFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setSelectedFile(e.dataTransfer.files[0]);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return alert(\"Please select a file.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('studentId', studentId);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/student/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n\r\n      setMessage('File uploaded successfully!');\r\n      setSelectedFile(null);\r\n      fetchFiles();\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      setMessage('Upload failed.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fileId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/student/files/${fileId}`);\r\n      fetchFiles();\r\n    } catch (error) {\r\n      console.error('Delete failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-private-files\">\r\n      <h2>Upload Private Files</h2>\r\n\r\n      <div\r\n        className=\"drop-zone\"\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n      >\r\n        {selectedFile ? selectedFile.name : 'Drag & drop a file or click to select'}\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n      </div>\r\n\r\n      <button className=\"upload-button\" onClick={handleUpload}>Upload</button>\r\n      {message && <p className=\"message\">{message}</p>}\r\n\r\n      <div className=\"uploaded-files\">\r\n        <h3>Uploaded Files</h3>\r\n        {uploadedFiles.length === 0 ? (\r\n          <p>No files uploaded yet.</p>\r\n        ) : (\r\n          <ul>\r\n            {uploadedFiles.map(file => (\r\n              <li key={file._id}>\r\n                <a href={`http://localhost:5000/${file.filePath}`} target=\"_blank\" rel=\"noreferrer\">\r\n                  {file.originalName}\r\n                </a>\r\n                <button onClick={() => handleDelete(file._id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;          */\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./StudentPrivateFiles.css\";\r\n\r\nconst StudentPrivateFiles = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const fileInputRef = useRef();\r\n\r\n  const studentName = \"John Doe\"; // Replace with dynamic student name if available\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/student/files/${studentName}`);\r\n      setUploadedFiles(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching files\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"studentName\", studentName);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/student/files/upload\", formData);\r\n      setFile(null);\r\n      fileInputRef.current.value = null;\r\n      fetchFiles(); // Refresh list\r\n    } catch (err) {\r\n      console.error(\"Upload failed\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Upload Private File</h2>\r\n      <input type=\"file\" onChange={handleFileChange} ref={fileInputRef} />\r\n      <button onClick={handleUpload} disabled={!file}>\r\n        Upload\r\n      </button>\r\n\r\n      <h3>Uploaded Files</h3>\r\n      {uploadedFiles.length === 0 ? (\r\n        <p>No files uploaded yet.</p>\r\n      ) : (\r\n        <ul>\r\n          {uploadedFiles.map((fileData) => (\r\n            <li key={fileData._id}>\r\n              <a href={`http://localhost:5000/${fileData.filePath}`} target=\"_blank\" rel=\"noreferrer\">\r\n                {fileData.filePath.split(\"/\").pop()}\r\n              </a> — Uploaded at: {new Date(fileData.uploadedAt).toLocaleString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPrivateFiles;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}