{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentNotificationPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\n\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './StudentNotificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentNotificationPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/student/notifications', {\n        headers: {\n          // Add authorization header if you have authentication\n          // 'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      } else {\n        setError(response.data.error || 'Failed to load notifications');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'Error fetching notifications');\n      console.error('Fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: \"Loading notifications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: \"No notifications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.map(notification => {\n        var _notification$course, _notification$instruc;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-card ${notification.isImportant ? 'important' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: [((_notification$course = notification.course) === null || _notification$course === void 0 ? void 0 : _notification$course.name) && `Course: ${notification.course.name} â€¢ `, new Date(notification.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), ((_notification$instruc = notification.instructor) === null || _notification$instruc === void 0 ? void 0 : _notification$instruc.name) && /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Instructor: \", notification.instructor.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentNotificationPage, \"AS6q/RMxLSF4b91ocJSzqFAqRUg=\");\n_c = StudentNotificationPage;\nexport default StudentNotificationPage;\nvar _c;\n$RefreshReg$(_c, \"StudentNotificationPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentNotificationPage","_s","notifications","setNotifications","loading","setLoading","error","setError","fetchNotifications","response","get","headers","data","success","_error$response","_error$response$data","message","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","_notification$course","_notification$instruc","isImportant","title","course","name","Date","createdAt","toLocaleString","instructor","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentNotificationPage.js"],"sourcesContent":["/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/student/notifications');\r\n        setNotifications(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications available.</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif._id}>\r\n              <h4>{notif.title}</h4>\r\n              <p>{notif.message}</p>\r\n              <small>By: {notif.createdBy} | {new Date(notif.createdAt).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage; */\r\n\r\n\r\n/* import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Notification.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      const res = await axios.get('http://localhost:5000/api/notifications');\r\n      setNotifications(res.data);\r\n    };\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"student-notification-page\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications yet.</p>\r\n      ) : (\r\n        <ul className=\"notification-list\">\r\n          {notifications.map((note) => (\r\n            <li key={note._id}>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.message}</p>\r\n              <span className=\"timestamp\">\r\n                {new Date(note.createdAt).toLocaleString()}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;   */\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/student/notifications', {\r\n        headers: {\r\n          // Add authorization header if you have authentication\r\n          // 'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        setNotifications(response.data.notifications);\r\n      } else {\r\n        setError(response.data.error || 'Failed to load notifications');\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.error || error.message || 'Error fetching notifications');\r\n      console.error('Fetch error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    const interval = setInterval(fetchNotifications, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"notifications-container\">Loading notifications...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"notifications-container error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <div className=\"empty-state\">No notifications available</div>\r\n      ) : (\r\n        <div className=\"notifications-list\">\r\n          {notifications.map((notification) => (\r\n            <div \r\n              key={notification._id} \r\n              className={`notification-card ${notification.isImportant ? 'important' : ''}`}\r\n            >\r\n              <h3>{notification.title}</h3>\r\n              <p>{notification.message}</p>\r\n              <div className=\"notification-footer\">\r\n                <small>\r\n                  {notification.course?.name && `Course: ${notification.course.name} â€¢ `}\r\n                  {new Date(notification.createdAt).toLocaleString()}\r\n                </small>\r\n                {notification.instructor?.name && (\r\n                  <small>Instructor: {notification.instructor.name}</small>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}