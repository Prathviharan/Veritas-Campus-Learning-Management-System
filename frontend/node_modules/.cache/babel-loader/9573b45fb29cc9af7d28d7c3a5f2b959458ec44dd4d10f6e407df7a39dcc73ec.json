{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\LMS\\\\Veritas-Campus-Learning-Management-System\\\\frontend\\\\src\\\\pages\\\\student\\\\StudentNotificationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './StudentNotificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentNotificationPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/student/notifications');\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      }\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 30000); // Refresh every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: \"Loading notifications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: \"No notifications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-grid\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-card ${notification.isImportant ? 'important' : ''}`,\n        children: [notification.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000${notification.imageUrl}`,\n            alt: \"Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(notification.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), notification.course && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"course-tag\",\n              children: notification.course.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, notification._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentNotificationPage, \"b5Z8U3/R7VRYC3BVdCsp3rDTxkc=\");\n_c = StudentNotificationPage;\nexport default StudentNotificationPage;\nvar _c;\n$RefreshReg$(_c, \"StudentNotificationPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentNotificationPage","_s","notifications","setNotifications","loading","setLoading","fetchNotifications","response","get","data","success","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","isImportant","imageUrl","src","alt","title","message","Date","createdAt","toLocaleString","course","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/LMS/Veritas-Campus-Learning-Management-System/frontend/src/pages/student/StudentNotificationPage.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentNotificationPage.css';\r\n\r\nconst StudentNotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/student/notifications');\r\n      if (response.data.success) {\r\n        setNotifications(response.data.notifications);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    const interval = setInterval(fetchNotifications, 30000); // Refresh every 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"notifications-container\">Loading notifications...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <div className=\"empty-state\">No notifications available</div>\r\n      ) : (\r\n        <div className=\"notifications-grid\">\r\n          {notifications.map((notification) => (\r\n            <div key={notification._id} className={`notification-card ${notification.isImportant ? 'important' : ''}`}>\r\n              {notification.imageUrl && (\r\n                <div className=\"notification-image\">\r\n                  <img \r\n                    src={`http://localhost:5000${notification.imageUrl}`} \r\n                    alt=\"Notification\" \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"notification-content\">\r\n                <h3>{notification.title}</h3>\r\n                <p>{notification.message}</p>\r\n                <div className=\"notification-meta\">\r\n                  <span>{new Date(notification.createdAt).toLocaleString()}</span>\r\n                  {notification.course && (\r\n                    <span className=\"course-tag\">{notification.course.name}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentNotificationPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}